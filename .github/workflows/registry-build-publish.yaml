name: Build and publish to Github Container Registry

on:
  push:
    branches: [ master, grpc-mqtt ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MQTTS_TEST_URL: ${{ secrets.MQTTS_URL }}

jobs:

  lint:
    name: Lint code
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "##[set-output name=dir;]$(yarn cache dir)"
      - name: Restore yarn cache
        uses: actions/cache@v2.1.6
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install project dependencies
        run: |
          yarn --prefer-offline --pure-lockfile
      - name: Run eslint
        run: |
          yarn run lint:ci

  test:
    name: Run tests
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          echo "##[set-output name=dir;]$(yarn cache dir)"
      - name: Restore yarn cache
        uses: actions/cache@v2.1.6
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install project dependencies
        run: |
          yarn --prefer-offline --pure-lockfile

      - name: Execute tests
        run: |
          - yarn test

  build-and-push-images:
    runs-on: ubuntu-latest
    # Depends on lint and test jobs
    needs: [lint, test]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=
            suffix=

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
