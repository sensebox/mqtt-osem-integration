name: Build and publish to Github Container Registry

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  lint:
    name: Lint code
    runs-on: ubuntu-20.04
    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install project dependencies
        run: npm install

      - name: üî¨ Lint
        run: npm run lint:ci

  test:
    name: Run tests
    runs-on: ubuntu-20.04

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: ./package.json
          node-version: 20

      - name: Install project dependencies
        run: |
          npm install --include=dev

      - name: ‚ö° Execute tests
        run: |
          export MQTTS_TEST_URL=${{ secrets.MQTTS_URL }}
          export WSS_TEST_URL=${{ secrets.WSS_URL }}
          npm run test

  build-and-push-images:
    runs-on: ubuntu-latest
    # Depends on lint and test jobs
    needs: [lint, test]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=auto
            prefix=
            suffix=

      - name: Build and push Docker image
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
